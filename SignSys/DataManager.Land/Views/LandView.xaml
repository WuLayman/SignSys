<UserControl x:Class="DataManager.Land.Views.LandView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:infrastructure="clr-namespace:Client.Infrastructure;assembly=Client.Infrastructure"
             xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"
             mc:Ignorable="d"
             d:DesignHeight="500" d:DesignWidth="500">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Card.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Popupbox.xaml" />-->
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <toolkit:BusyIndicator IsBusy="{Binding IsBusy, Mode=TwoWay}" BusyContent="Loading Service....">
        <materialDesign:Card VerticalAlignment="Stretch" 
                         HorizontalAlignment="Stretch" 
                         MaxWidth="400" 
                         MaxHeight="300">
            <Grid Margin="5" FocusManager.FocusedElement="{Binding ElementName=UserName}">
                <Grid.Resources>
                    <ResourceDictionary>
                        <Style TargetType="materialDesign:PackIcon">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="DockPanel">
                            <Setter Property="Margin" Value="20 3"/>
                        </Style>
                    </ResourceDictionary>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <DockPanel Grid.Row="1">
                    <materialDesign:PackIcon DockPanel.Dock="Left" Kind="Account"  Foreground="{Binding ElementName=PasswordBox, Path=BorderBrush}"/>
                    <TextBox x:Name="UserName"  Margin="3"  Text="{Binding UserName}" VerticalAlignment="Center"/>
                </DockPanel>
                <DockPanel Grid.Row="2">
                    <materialDesign:PackIcon DockPanel.Dock="Left" Kind="Key" 
                                         Foreground="{Binding ElementName=PasswordBox, Path=BorderBrush}"/>
                    <PasswordBox x:Name="PasswordBox" 
                                 infrastructure:PasswordBingSolve.Password="{Binding Password,Mode=TwoWay}" 
                                 Margin="3" VerticalAlignment="Center" Loaded="PasswordBox_Loaded" 
                                 >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyDown">
                                <!-- This action will invoke the selected command in the view model and pass the parameters of the event to it. -->
                                <prism:InvokeCommandAction Command="{Binding EnterLoginCommand}" TriggerParameterPath="Key" />
                            </i:EventTrigger>
                            <!--<i:EventTrigger EventName="Password">
                                <prism:InvokeCommandAction Command="{Binding GetPasswordCommand}" TriggerParameterPath="PasswordBox"/>
                            </i:EventTrigger>-->
                        </i:Interaction.Triggers>
                    </PasswordBox>
                </DockPanel>

                <DockPanel Grid.Row="3">
                    <Button VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Style="{StaticResource MaterialDesignFlatButton}"
                        Command="{Binding LoginCommand}"
                        Content="系统登入"/>
                </DockPanel>
            </Grid>
        </materialDesign:Card>

    </toolkit:BusyIndicator>
</UserControl>
